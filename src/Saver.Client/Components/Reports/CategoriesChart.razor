@using Saver.FinanceService.Contracts.Reports
@inject IJSRuntime JsRuntime

<div class="p-3 bg-light rounded-3">
    <p>@Header</p>
    @if (CategoriesReport != null)
    {
        <canvas id="@ChartId"></canvas>
    }
    else
    {
        <p>Loading...</p>
    }
</div>
@code {
    [Parameter] public string Header { get; set; } = string.Empty;
    [Parameter, EditorRequired] public IEnumerable<CategoryReportEntryDto>? CategoriesReport { get; set; }
    [Parameter] public string ChartId { get; set; } = "categories-chart";

    private bool _reportLoaded;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (!firstRender && _reportLoaded)
        {
            return;
        }

        if (CategoriesReport != null)
        {
            _reportLoaded = true;
            await JsRuntime.InvokeVoidAsync("createCategoriesChart",
                ChartId,
                CategoriesReport.OrderByDescending(x => x.Value).Select(x => x.Category.Name).ToList(), 
                CategoriesReport.OrderByDescending(x => Math.Abs(x.Value)).Select(x => Math.Abs(x.Value)).ToList());
        }
    }
}
