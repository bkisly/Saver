@page "/dashboard"
@inject IReportsApiClient ReportsApiClient
@inject IBankAccountsApiClient BankAccountsApiClient

@using Saver.FinanceService.Contracts.BankAccounts
@using Saver.FinanceService.Contracts.Reports
@using Saver.FinanceService.Contracts.Transactions

<PageTitle>Dashboard</PageTitle>

<h1 class="h3">Here are key details about your main account: Sample account.</h1>

<div class="row row-gap-4 row-cols-1 row-cols-md-2 row-cols-lg-3 mt-4">
    <div class="col d-flex align-items-stretch">
        <BalanceReport Balance="2000M" CurrencyCode="USD" ChangeInLast7Days="25.34M" ChangeInLast30Days="-100.1M"/>
    </div>
    <div class="col">
        <TopCategoriesReport 
            CurrencyCode="USD" 
            Categories="_categoryReports" 
            Header="TOP BENEFITS IN LAST 30 DAYS" 
            TransactionType="TransactionType.Income"/>
    </div>
    <div class="col">
        <TopCategoriesReport 
            CurrencyCode="USD" 
            Categories="_categoryReports" 
            Header="TOP EXPENSES IN LAST 30 DAYS" 
            TransactionType="TransactionType.Outcome"/>
    </div>
</div>

<div class="my-4">
    <BalanceChart Header="BALANCE CHANGES IN LAST 30 DAYS"/>
</div>

@code {
    private BankAccountDto? _defaultAccountDto;
    private BalanceReportDto? _balanceReportDto;

    private readonly List<CategoryReportViewModel> _categoryReports =
    [
        new() { CategoryName = "Category 1", DifferenceToPreviousPeriod = 20.15M, Total = 315.45M },
        new() { CategoryName = "Category 2", DifferenceToPreviousPeriod = -43M, Total = 200.45M },
        new() { CategoryName = "Category 3", DifferenceToPreviousPeriod = 21.1M, Total = 95.45M }
    ];

    // protected override async Task OnInitializedAsync()
    // {
    //     _defaultAccountDto = await BankAccountsApiClient.GetDefaultBankAccountAsync();

    //     if (_defaultAccountDto is not null)
    //     {
    //         var balanceReportResponse = await ReportsApiClient.GetBalanceReportForAccountAsync(_defaultAccountDto.Id);
    //         _balanceReportDto = balanceReportResponse.Content;
    //     }

    //     await base.OnInitializedAsync();
    // }
}
