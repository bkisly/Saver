@page "/categories"
@using Saver.Client.Components.Forms
@using Saver.FinanceService.Contracts.Categories

@attribute [Authorize]

@inject ICategoriesApiClient CategoriesApiClient

<PageTitle>Categories</PageTitle>

<h3>Manage transaction categories or add new ones.</h3>

<div class="d-flex my-3">
    <a class="btn btn-light rounded-3" href="/transactions">
        <span>
            <i class="bi-arrow-left"></i>
        </span>
        <span>Back to transactions</span>
    </a>
    <button type="button" class="btn btn-secondary rounded-3 ms-2" data-bs-toggle="modal" data-bs-target="#@CategoryForm.FormName">
        <span>
            <i class="bi-plus-lg"></i>
        </span>
        <span>New category</span>
    </button>
</div>

<div class="mx-2">
    @if (_categories is null)
    {
        <p>Loading...</p>
    }
    else
    {
        @if (_categories.Any())
        {
            @foreach (var category in _categories)
            {
                <div class="row p-2 my-2 bg-light rounded-3">
                    <div class="col-auto my-auto">
                        <i class="bi-tags-fill fs-3"></i>
                    </div>
                    <div class="col my-auto">
                        <p class="fs-5 fw-medium m-0">@category.Name</p>
                        <span class="my-1">@category.Description</span>
                    </div>
                    <div class="col-auto my-auto justify-content-end text-end">
                        <button type="button" class="border-0 bg-transparent my-auto text-black" data-bs-toggle="modal" @onclick="() => SelectCategoryToEdit(category.Id)" data-bs-target="#@CategoryForm.FormName">
                            <i class="fs-5 bi-pen"></i>
                        </button>
                        <button type="button" class="border-0 bg-transparent my-auto text-black" data-bs-toggle="modal" data-bs-target="#delete-modal" @onclick="() => SelectCategoryToDelete(category.Id)">
                            <i class="fs-5 bi-trash"></i>
                        </button>
                    </div>
                </div>
            }

            <CategoryForm @ref="_categoryForm" OnSave="HandleCategorySavedAsync"/>

            <!-- Delete confirmation modal -->
            <div class="modal fade" id="delete-modal" tabindex="-1" aria-labelledby="delete-confirmation-title" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h1 class="modal-title fs-5" id="delete-confirmation-title">Delete confirmation</h1>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <p>
                                <span>Are you sure you want to delete this transaction</span>
                            </p>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary rounded-3" data-bs-dismiss="modal">Cancel</button>
                            <button type="button" class="btn btn-danger rounded-3" data-bs-dismiss="modal" @onclick="DeleteCategoryAsync">I understand, delete.</button>
                        </div>
                    </div>
                </div>
            </div>
        }
        else
        {
            <p>No categories available.</p>
        }
    }
</div>

@code {
    private IEnumerable<CategoryDto>? _categories;
    private CategoryForm _categoryForm = null!;
    private Guid _categoryToDelete;

    protected override async Task OnInitializedAsync()
    {
        _categories = (await CategoriesApiClient.GetCategoriesAsync()).Content;
    }

    private async Task HandleCategorySavedAsync(CategoryViewModel obj)
    {
        await RefreshCategories();
    }

    private void SelectCategoryToEdit(Guid categoryId)
    {
        if (_categories is not null)
        {
            _categoryForm.LoadCategoryFromDto(_categories.Single(x => x.Id == categoryId));
        }
    }

    private void SelectCategoryToDelete(Guid categoryId)
    {
        _categoryToDelete = categoryId;
    }

    private async Task DeleteCategoryAsync()
    {
        await CategoriesApiClient.DeleteCategoryAsync(_categoryToDelete);
        await RefreshCategories();
    }

    private async Task RefreshCategories()
    {
        _categories = null;
        StateHasChanged();
        _categories = (await CategoriesApiClient.GetCategoriesAsync()).Content;
        StateHasChanged();
    }
}
