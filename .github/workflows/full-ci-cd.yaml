name: Full CI/CD pipeline for Saver system

on:
  push:
    branches:
      - master
      - release/Saver
  pull_request:
    branches:
      - master
      - release/**

permissions:
  id-token: write
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'

    - name: Install workload
      run: dotnet workload restore

    - name: Install dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build -c Release --no-restore

    - name: Check for vulnerabilities
      run: |
        chmod +x ./scripts/dotnet-vulnerable.sh
        ./scripts/dotnet-vulnerable.sh

    - name: Test
      run: dotnet test -c Release --no-build -v normal

  release:
    runs-on: ubuntu-latest
    needs: build
    if: ${{ github.ref == 'heads/refs/release/Saver' }}
    env:
      AZURE_CLIENT_ID: ${{ vars.AZURE_CLIENT_ID }}
      AZURE_TENANT_ID: ${{ vars.AZURE_TENANT_ID }}
      AZURE_SUBSCRIPTION_ID: ${{ vars.AZURE_SUBSCRIPTION_ID }}
      AZURE_ENV_NAME: ${{ vars.AZURE_ENV_NAME }}
      AZURE_LOCATION: ${{ vars.AZURE_LOCATION }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install azd
      uses: Azure/setup-azd@v1.0.0

    - name: Install .NET Aspire workload
      run: dotnet workload install aspire

    - name: Log in with Azure
      run: |
        azd auth login `
          --client-id "$Env:AZURE_CLIENT_ID" `
          --federated-credential-provider "github" `
          --tenant-id "$Env:AZURE_TENANT_ID"
      shell: pwsh

    - name: Provision infrastructure
      run: azd provision --no-prompt
      env:
        AZD_INITIAL_ENVIRONMENT_CONFIG: ${{ secrets.AZD_INITIAL_ENVIRONMENT_CONFIG }}

    - name: Deploy
      run: azd deploy --no-prompt
